name: DAST - OWASP ZAP

on:
  workflow_call:

permissions:
  contents: read
  issues: write
  security-events: write

jobs:
  zap-baseline-scan:
    name: ZAP Baseline Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start application
        run: |
          docker compose up -d
          sleep 40

      - name: Verify services
        run: |
          docker compose ps
          curl -I http://localhost:8080 || echo "API not responding"
          curl -I http://localhost:1337 || echo "Client not responding"

      - name: Run ZAP Baseline Scan
        run: |
          docker run --network=host -v $(pwd):/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py -t http://localhost:8080 \
            -r zap-baseline-report.html \
            -J zap-baseline-report.json \
            -w zap-baseline-report.md \
            -a || true

      - name: Upload ZAP Baseline Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-baseline-report
          path: |
            zap-baseline-report.html
            zap-baseline-report.json
            zap-baseline-report.md
          if-no-files-found: warn

      - name: Stop application
        if: always()
        run: docker compose down -v

  zap-full-scan:
    name: ZAP Full Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start application
        run: |
          docker compose up -d
          sleep 40

      - name: Verify services
        run: |
          docker compose ps
          curl -I http://localhost:8080 || echo "API not responding"

      - name: Run ZAP Full Scan
        run: |
          docker run --network=host -v $(pwd):/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-full-scan.py -t http://localhost:8080 \
            -r zap-full-scan-report.html \
            -J zap-full-scan-report.json \
            -w zap-full-scan-report.md \
            -a -j || true

      - name: Upload ZAP Full Scan Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-full-scan-report
          path: |
            zap-full-scan-report.html
            zap-full-scan-report.json
            zap-full-scan-report.md
          if-no-files-found: warn

      - name: Stop application
        if: always()
        run: docker compose down -v

  zap-api-scan:
    name: ZAP API Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start application
        run: |
          docker compose up -d
          sleep 40

      - name: Verify services
        run: |
          docker compose ps
          curl -I http://localhost:8080 || echo "API not responding"

      - name: Run ZAP API Scan
        run: |
          docker run --network=host -v $(pwd):/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-api-scan.py -t http://localhost:8080/v3/api-docs \
            -f openapi \
            -r zap-api-scan-report.html \
            -J zap-api-scan-report.json \
            -a || true

      - name: Upload ZAP API Scan Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-api-scan-report
          path: |
            zap-api-scan-report.html
            zap-api-scan-report.json
          if-no-files-found: warn

      - name: Stop application
        if: always()
        run: docker compose down -v