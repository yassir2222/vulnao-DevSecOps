name: SAST - SonarCloud Analysis

on:
  workflow_call:
  push:
    branches: [ main, develop ]
  pull_request:

env:
  SONAR_ORGANIZATION: yassir2222
  SONAR_PROJECT_KEY: yassir2222_vulnao-DevSecOps
  SONAR_HOST_URL: https://sonarcloud.io
  JAVA_VERSION: '17'

jobs:
  sonarcloud-analysis:
    name: SonarCloud Code Analysis
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: write 
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-sonar-
            ${{ runner.os }}-

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and Run Tests
        run: |
          mvn clean verify \
            -B \
            -Dmaven.test.failure.ignore=false

      - name: SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.verbose=false

      - name: Wait for SonarCloud Processing
        run: sleep 10

      - name: SonarCloud Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        continue-on-error: true  
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        id: quality-gate

      - name: Quality Gate Status
        if: steps.quality-gate.outcome == 'failure'
        run: |
          echo "Quality Gate Failed!"
          echo "Check the SonarCloud dashboard for details"
          

      - name: Upload SonarCloud Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sonarcloud-results
          path: |
            target/sonar/
            target/site/jacoco/
          retention-days: 30
          if-no-files-found: warn

      - name: Comment PR with SonarCloud Results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const projectKey = process.env.SONAR_PROJECT_KEY;
            const org = process.env.SONAR_ORGANIZATION;
            const prNumber = context.payload.pull_request.number;
            
            const comment = `## SonarCloud Analysis Results
            
            [View Detailed Report](https://sonarcloud.io/summary/overall?id=${projectKey})
            
            Quality Gate: ${{ steps.quality-gate.outcome }}
            
            ---
            _This comment was automatically generated_`;
            
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });